import static oms3.SimBuilder.instance as OMS3
def home = oms_prj
// start and end date of the simulation
def startDate= "2008-07-22 15:00"
def endDate="2008-07-22 15:00"
OMS3.sim {
resource "$oms_prj/lib"
 model( ) {
 	components {		   
 		// components to be called: reader input data, net radiation component and writer output data
 		"readerAirTemperature"		"org.jgrasstools.gears.io.rasterreader.OmsRasterReader"
        "readerNetRadiation"		"org.jgrasstools.gears.io.rasterreader.OmsRasterReader"
        "writerEtPt"				"org.jgrasstools.gears.io.rasterwriter.OmsRasterWriter" 
        "EtPriestleyTaylorRaster"	"etp.OmsPriestleyTaylorEtRaster"
   }
   parameter{
   	// parameter of the reader components 
   	"readerAirTemperature.file"		"${home}/data/DataRaster/kriging_interpolated_20080722_1500.asc" 
   	"readerNetRadiation.file"		"${home}/data/DataRaster/netRadiationRaster.asc"   	        
   	// parameter of the net radiation component
   	"EtPriestleyTaylorRaster.defaultPressure"	101.3
   	"EtPriestleyTaylorRaster.pAlpha"			1.26
   	"EtPriestleyTaylorRaster.pGmorn"			0.35 
   	"EtPriestleyTaylorRaster.pGnight"			0.75
   	"EtPriestleyTaylorRaster.tStartDate"		"${startDate}"
   	"EtPriestleyTaylorRaster.doHourly"			true   	
   	// parameter of the writing component    
   	"writerEtPt.file"				"${home}/output/EtPtRaster.asc" 
   	}
   	connect {   		
   		"readerAirTemperature.outRaster"		"EtPriestleyTaylorRaster.inAirTemperatureGrid"
   		"readerNetRadiation.outRaster"			"EtPriestleyTaylorRaster.inNetRadiationGrid"
   		"EtPriestleyTaylorRaster.outEtPtGrid"	"writerEtPt.inRaster"
   	}
  }
}


